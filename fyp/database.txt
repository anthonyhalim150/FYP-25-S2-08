use FYP;
CREATE TABLE users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(255) NOT NULL UNIQUE,
  username VARCHAR(100) NOT NULL UNIQUE,
  firstName VARCHAR(100),
  lastName VARCHAR(100),
  dob DATE DEFAULT NULL,
  password VARCHAR(255), -- nullable for Google/Apple sign-ins
  method ENUM('database', 'google', 'apple') NOT NULL DEFAULT 'database',
  role ENUM('user', 'admin', 'premium') NOT NULL DEFAULT 'user',
  tokens INT NOT NULL DEFAULT 0,
  avatar_id INT DEFAULT NULL,
  background_id INT DEFAULT NULL, 
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (avatar_id) REFERENCES avatars(id) ON DELETE SET NULL,
  FOREIGN KEY (background_id) REFERENCES backgrounds(id) ON DELETE SET NULL
);
CREATE TABLE pending_users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(255) NOT NULL UNIQUE,
  username VARCHAR(100) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  otp VARCHAR(6) NOT NULL,
  expires_at DATETIME NOT NULL,
  failed_attempts INT NOT NULL DEFAULT 0,
  firstName VARCHAR(100),
  lastName VARCHAR(100),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE password_resets (
  id INT AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(255) NOT NULL,
  token VARCHAR(255) NOT NULL,
  expires_at DATETIME NOT NULL,
  failed_attempts INT NOT NULL DEFAULT 0
);
CREATE TABLE user_preferences (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  workout_frequency VARCHAR(50),
  fitness_goal VARCHAR(50),
  workout_time VARCHAR(50),
  fitness_level VARCHAR(50),
  injury VARCHAR(100),
  submitted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);
CREATE TABLE spin_history (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  prize_label VARCHAR(100),
  prize_type VARCHAR(50),
  prize_value INT,
  spun_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE prizes (
  id INT AUTO_INCREMENT PRIMARY KEY,
  label VARCHAR(100) NOT NULL,
  type ENUM('tokens', 'freeze', 'avatar', 'background', 'trial', 'none') NOT NULL,
  value INT NOT NULL
);

CREATE TABLE avatars (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  image_url VARCHAR(255) NOT NULL,
  is_premium BOOLEAN DEFAULT false
);
CREATE TABLE backgrounds (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  image_url VARCHAR(255) NOT NULL,
  is_premium BOOLEAN DEFAULT false
);

INSERT INTO avatars (name, image_url, is_premium)
VALUES 
  ('free1', 'assets/avatars/free/free1.png', false),
  ('free2', 'assets/avatars/free/free2.png', false),
  ('free3', 'assets/avatars/free/free3.png', false),
  ('premium2', 'assets/avatars/premium/premium2.png', true),
  ('premium3', 'assets/avatars/premium/premium3.png', true),
  ('premium4', 'assets/avatars/premium/premium4.png', true),
  ('premium5', 'assets/avatars/premium/premium5.png', true),
  ('premium6', 'assets/avatars/premium/premium6.png', true),
  ('premium7', 'assets/avatars/premium/premium7.png', true);



INSERT INTO backgrounds (name, image_url, is_premium)
VALUES 
  ('bg1', 'assets/background/bg1.jpg', false),
  ('bg2', 'assets/background/bg2.jpg', false),
  ('bg3', 'assets/background/bg3.jpeg', false),
  ('bg4', 'assets/background/bg4.jpg', false),
  ('bg5', 'assets/background/bg5.png', false),
  ('bg6', 'assets/background/bg6.png', false),
  ('bg7', 'assets/background/bg7.png', false),
  ('bg8', 'assets/background/bg8.png', false),
  ('bg9', 'assets/background/bg9.png', false);

INSERT INTO prizes (label, type, value) VALUES
('10 Tokens', 'tokens', 10),
('1 Freeze', 'freeze', 1),
('50 Tokens', 'tokens', 50),
('3 Freezes', 'freeze', 3),
('1 Tokens', 'tokens', 1),
('1 Avatar', 'avatar', 1),
('1 Background', 'background', 1),
('150 Tokens', 'tokens', 150),
('5 Freezes', 'freeze', 5),
('1 Day Trial', 'trial', 1);
