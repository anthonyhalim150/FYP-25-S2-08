use FYP;
CREATE TABLE users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(255) NOT NULL UNIQUE,
  username VARCHAR(100) NOT NULL UNIQUE,
  firstName VARCHAR(100),
  lastName VARCHAR(100),
  dob DATE DEFAULT NULL,
  password VARCHAR(255), -- nullable for Google/Apple sign-ins
  method ENUM('database', 'google', 'apple') NOT NULL DEFAULT 'database',
  role ENUM('user', 'admin', 'premium') NOT NULL DEFAULT 'user',
  isSuspended BOOLEAN NOT NULL DEFAULT false,
  tokens INT NOT NULL DEFAULT 0,
  xp INT NOT NULL DEFAULT 0,
  avatar_id INT DEFAULT NULL,
  background_id INT DEFAULT NULL, 
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (avatar_id) REFERENCES avatars(id) ON DELETE SET NULL,
  FOREIGN KEY (background_id) REFERENCES backgrounds(id) ON DELETE SET NULL
);
CREATE TABLE pending_users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(255) NOT NULL UNIQUE,
  username VARCHAR(100) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  otp VARCHAR(6) NOT NULL,
  expires_at DATETIME NOT NULL,
  failed_attempts INT NOT NULL DEFAULT 0,
  firstName VARCHAR(100),
  lastName VARCHAR(100),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE password_resets (
  id INT AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(255) NOT NULL,
  token VARCHAR(255) NOT NULL,
  expires_at DATETIME NOT NULL,
  failed_attempts INT NOT NULL DEFAULT 0
);
CREATE TABLE user_preferences (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  workout_frequency VARCHAR(50),
  fitness_goal VARCHAR(50),
  workout_time VARCHAR(50),
  fitness_level VARCHAR(50),
  injury VARCHAR(100),
  submitted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);
CREATE TABLE spin_history (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  prize_label VARCHAR(100),
  prize_type VARCHAR(50),
  prize_value INT,
  spun_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE prizes (
  id INT AUTO_INCREMENT PRIMARY KEY,
  label VARCHAR(100) NOT NULL,
  type ENUM('tokens', 'freeze', 'avatar', 'background', 'trial', 'none') NOT NULL,
  value INT NOT NULL
);

CREATE TABLE avatars (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  image_url VARCHAR(255) NOT NULL,
  is_premium BOOLEAN DEFAULT false
);
CREATE TABLE backgrounds (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  image_url VARCHAR(255) NOT NULL,
  is_premium BOOLEAN DEFAULT false
);
CREATE TABLE messages (
  id INT AUTO_INCREMENT PRIMARY KEY,
  sender_id INT NOT NULL,
  receiver_id INT NOT NULL,
  content TEXT NOT NULL,
  sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  is_read BOOLEAN NOT NULL DEFAULT false,
  FOREIGN KEY (sender_id) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (receiver_id) REFERENCES users(id) ON DELETE CASCADE
);
CREATE TABLE friends (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  friend_id INT NOT NULL,
  status ENUM('pending', 'accepted', 'rejected') NOT NULL DEFAULT 'pending',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (friend_id) REFERENCES users(id) ON DELETE CASCADE
);
CREATE TABLE badges (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  description VARCHAR(255),
  icon_url VARCHAR(255) NOT NULL,
  is_premium BOOLEAN DEFAULT false
);

CREATE TABLE user_badges (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  badge_id INT NOT NULL,
  earned_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (badge_id) REFERENCES badges(id) ON DELETE CASCADE,
  UNIQUE KEY unique_user_badge (user_id, badge_id)
);

CREATE TABLE quests (
  code VARCHAR(100) PRIMARY KEY,
  text VARCHAR(255) NOT NULL,
  xp_reward INT NOT NULL DEFAULT 10
);

CREATE TABLE user_daily_quests (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  quest_code VARCHAR(100) NOT NULL,
  quest_date DATE NOT NULL,
  done BOOLEAN NOT NULL DEFAULT false,
  claimed BOOLEAN NOT NULL DEFAULT false,
  completed_at TIMESTAMP DEFAULT NULL,
  claimed_at TIMESTAMP DEFAULT NULL,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (quest_code) REFERENCES quests(code) ON DELETE CASCADE,
  UNIQUE KEY uq_user_quest_day (user_id, quest_code, quest_date)
);

CREATE TABLE levels (
  level INT PRIMARY KEY,
  xp_required INT NOT NULL,
  reward_tokens INT DEFAULT 0,
  badge_id INT DEFAULT NULL
);


INSERT INTO avatars (name, image_url, is_premium)
VALUES 
  ('free1', 'assets/avatars/free/free1.png', false),
  ('free2', 'assets/avatars/free/free2.png', false),
  ('free3', 'assets/avatars/free/free3.png', false),
  ('premium2', 'assets/avatars/premium/premium2.png', true),
  ('premium3', 'assets/avatars/premium/premium3.png', true),
  ('premium4', 'assets/avatars/premium/premium4.png', true),
  ('premium5', 'assets/avatars/premium/premium5.png', true),
  ('premium6', 'assets/avatars/premium/premium6.png', true),
  ('premium7', 'assets/avatars/premium/premium7.png', true);



INSERT INTO backgrounds (name, image_url, is_premium)
VALUES 
  ('bg1', 'assets/background/bg1.jpg', false),
  ('bg2', 'assets/background/bg2.jpg', false),
  ('bg3', 'assets/background/bg3.jpeg', false),
  ('bg4', 'assets/background/bg4.jpg', false),
  ('bg5', 'assets/background/bg5.png', false),
  ('bg6', 'assets/background/bg6.png', false),
  ('bg7', 'assets/background/bg7.png', false),
  ('bg8', 'assets/background/bg8.png', false),
  ('bg9', 'assets/background/bg9.png', false);

INSERT INTO prizes (label, type, value) VALUES
('10 Tokens', 'tokens', 10),
('1 Freeze', 'freeze', 1),
('50 Tokens', 'tokens', 50),
('3 Freezes', 'freeze', 3),
('1 Tokens', 'tokens', 1),
('1 Avatar', 'avatar', 1),
('1 Background', 'background', 1),
('150 Tokens', 'tokens', 150),
('5 Freezes', 'freeze', 5),
('1 Day Trial', 'trial', 1);

INSERT INTO badges (name, description, icon_url, is_premium) VALUES
('First Workout', 'Complete your first workout session to earn this badge.', 'assets/badges/badge_1.png', false),
('7-Day Streak', 'Work out for 7 consecutive days to earn this badge.', 'assets/badges/badge_2.png', false),
('10 Workouts', 'Complete 10 workout sessions to earn this badge.', 'assets/badges/badge_3.png', false),
('1000 Calories Burned', 'Burn a total of 1000 calories to earn this badge.', 'assets/badges/badge_4.png', false),
('Early Bird', 'Work out before 7AM five times to earn this badge.', 'assets/badges/badge_5.png', false),
('Friend Maker', 'Add your first friend to earn this badge.', 'assets/badges/badge_6.png', false),
('Competition Winner', 'Win your first competition to earn this badge.', 'assets/badges/badge_7.png', false),
('Premium Champion', 'Upgrade to premium membership to earn this badge.', 'assets/badges/badge_8.png', true),
('Spin Winner', 'Win a prize from the Lucky Spin to earn this badge.', 'assets/badges/badge_9.png', false),
('50 Workouts', 'Complete 50 workout sessions to earn this badge.', 'assets/badges/badge_10.png', false),
('Mindful Mover', 'Complete a mindful or recovery activity to earn this badge.', 'assets/badges/badge_11.png', false),
('Workout Buddy', 'Complete a workout with a friend to earn this badge.', 'assets/badges/badge_12.png', false);

INSERT INTO quests (code, text, xp_reward) VALUES
('ANY_WORKOUT', 'Finish any workout', 15),
('SPIN_LUCKY', 'Spin the Lucky Spin', 10),
('MESSAGE_FRIEND', 'Message a friend', 10),
('DAILY_LOGIN', 'Login today', 7);

INSERT INTO levels (level, xp_required, reward_tokens, badge_id) VALUES
(1, 0, 0, NULL),
(2, 100, 10, 1),
(3, 300, 20, 2),
(4, 600, 30, NULL),
(5, 1000, 50, 3);
